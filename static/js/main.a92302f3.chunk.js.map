{"version":3,"sources":["serviceWorker.js","app/layout/HeaderStyle.jsx","app/layout/Content.jsx","app/layout/Header.jsx","app/layout/Footer.jsx","app/layout/PageHeader.jsx","app/components/StatusTag.jsx","app/shared/BlogNav.jsx","app/shared/BlogContent.jsx","app/blog/BlogItem.jsx","app/layout/PageContent.jsx","app/Blog.jsx","app/blog/BlogPost.jsx","app/layout/Router.jsx","app/Layout.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderStyle","styled","div","_templateObject","Content","Content_templateObject","Header","props","react_default","a","createElement","class","role","aria-label","href","src","id","Footer","className","Date","getFullYear","PageHeader","concat","color","title","children","StatusTag","_ref","status","undefined","style","marginRight","BlogNav","to","date","textread","react_router_dom","components_StatusTag","moment","calendar","sameDay","lastDay","lastWeek","sameElse","BlogContent","icon","alt","react_markdown","source","limit","content","split","splice","join","BlogItem","shared_BlogContent","Object","assign","console","log","shared_BlogNav","pathname","path","state","PageContent","PageContent_templateObject","Blog","posts","client","contentful","space","accessToken","fetchPosts","_this","getEntries","setPosts","response","setState","items","this","then","layout_PageHeader","layout_PageContent","map","i","fields","blog_BlogItem","key","React","Component","BlogPost","Router","react_router","exact","component","Layout","layout_HeaderStyle","Helmet_default","meta","name","script","link","rel","layout_Header","layout_Content","layout_Router","layout_Footer","App","app_Layout","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a92302f3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components'\n\nconst HeaderStyle = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tmin-height: 100vh;\n`\nexport default HeaderStyle","import styled from 'styled-components'\n\nconst Content = styled.div`\n\tflex: 1;\n`\nexport default Content","import React from 'react'\nconst Header = (props) => (\n    <nav class=\"navbar has-background-white-ter\" role=\"navigation\" aria-label=\"main navigation\">\n    <div class=\"navbar-brand\">\n      <a class=\"navbar-item is-primary\" href=\".\">\n        <img src=\"https://img.icons8.com/metro/104/000000/google-code.png\" />\n      </a>\n      \n      <a class=\"navbar-item is-primary\" href=\".\">\n      <u class=\"navbar-item\">\n      Rasmi Blog\n      </u>\n     </a>\n      \n    </div>\n  \n    <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n      <div class=\"navbar-end\">\n        <div class=\"navbar-item\">\n          <div class=\"buttons\">\n            <a class=\"button is-primary is-outlined\" href=\"https://rasmivan.com\">\n              <strong>My Profile</strong>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n)\nexport default Header","import React from 'react'\n\nconst Footer = () => (\n  <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>Built on <strong>React</strong> using style with <strong> bulma </strong>and blog content from <strong> contentful </strong> by <a href=\"https://rasmivan.com/\">Rasmivan!</a>\n          <br /> Copyright {(new Date().getFullYear())}\n        </p>\n      </div>\n  </footer>\n)\n\nexport default Footer","import React from 'react'\nimport Header from './Header';\nconst PageHeader = (props) => (\n  <div>\n  <section className={`hero ${props.color}`}>\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <h1 className=\"title\">\n          {props.title}\n        </h1>\n        <h2 className=\"subtitle\">\n         <p> {props.children}</p>\n        </h2>\n      </div>\n    </div>\n  </section>\n  </div>\n)\nexport default PageHeader","import React from 'react'\nconst StatusTag = ({status}) => {\n  \n  if(status !== undefined){\n    switch(status[0]) {\n      case 'IN_PROGRESS':\n        return (<span className=\"tag is-small is-warning\" style={{ marginRight: 20 }}>In Progress</span>)\n      case 'ARCHIVED':\n        return (<span className=\"tag is-small is-danger\" style={{ marginRight: 20 }}>Archived</span>)\n      default:\n        return (<span></span>)\n    }\n  } else{\n    return (<span></span>)\n  }\n}\nexport default StatusTag","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport StatusTag from '../components/StatusTag'\nimport moment from 'moment'\nconst BlogNav = ({ to, date, status, textread }) => (\n  <nav className=\"level\">\n    <div className=\"level-left\">\n      <Link className=\"level-item button is-small is-link is-outlined\" to={to}>{textread}</Link>\n    </div>\n    <div className=\"level-right\">\n    <StatusTag status={status} />\n      <p className=\"level-item has-text-link is-size-7\">\n        {moment(date).calendar(null, {\n          sameDay: '[Today]',\n          lastDay: '[Yesterday]',\n          lastWeek: '[Last] dddd',\n          sameElse: 'MMM Do YYYY'\n        })}\n      </p>\n    </div>\n  </nav>\n)\nexport default BlogNav","import React from 'react'\nimport * as Markdown from 'react-markdown'\nconst BlogContent = (props) => (\n  <article className=\"media\">\n    <div className=\"media-left\">\n      <figure className=\"image is-64x64\">\n        <img src={props.icon} alt=\"Image\" />\n      </figure>\n    </div>\n    <div className=\"media-content\">\n      <div className=\"content\">\n        <h1>{props.title}</h1>\n        <Markdown\n          source={\n            props.limit\n            ? props.content.split(\" \").splice(0,props.limit).join(\" \").concat('...')\n            : props.content\n          }\n        />\n      </div>\n      { props.children }\n    </div>\n  </article>\n)\nexport default BlogContent","import React from 'react'\nimport BlogNav from '../shared/BlogNav'\nimport BlogContent from '../shared/BlogContent';\nconst BlogItem = (props) => (\n  <div className=\"box\">\n    <BlogContent limit={11} {...props }>\n    {console.log({props})}\n      <BlogNav date={props.date} to={{\n        pathname: `/post${props.path}`,\n        state: { props },\n      }} status ={props.status} textread= 'Read More' />\n    </BlogContent>\n  </div>\n)\nexport default BlogItem","import styled from 'styled-components'\nconst PageContent = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.5rem;\n`\nexport default PageContent","import React from 'react';\nimport * as contentful from 'contentful';\nimport PageHeader from './layout/PageHeader';\nimport BlogItem from './blog/BlogItem';\nimport PageContent from './layout/PageContent';\nclass Blog extends React.Component {\n  state = {\n    posts: []\n  }\n  client = contentful.createClient({\n    space: 'wby4w0sk2gzn',\n    accessToken: 'UIebK8lb22HNEVAODIIxdCX0m388c5Z05fkAR2jyDH0' \n  })\n  componentDidMount() {\n    this.fetchPosts().then(this.setPosts);\n  }\n  fetchPosts = () => this.client.getEntries()\n  setPosts = response => {\n\n    this.setState({\n      posts: response.items\n    })\n  }\n  render() {\n    return (\n      <div>\n        <PageHeader color=\"is-primary\" title=\"Code Blog\">\n            This blog is a mix of random posts on Angular, React, Java, Docker & K8s.\n        </PageHeader>\n        <br/>\n        <PageContent>\n          { this.state.posts.map(({fields}, i) =>\n            <BlogItem key={i} {...fields} />\n          )}\n        </PageContent>\n      </div>\n    )\n  }\n}\nexport default Blog","import React from 'react'\nimport PageContent from '../layout/PageContent'\nimport BlogNav from '../shared/BlogNav'\nimport BlogContent from '../shared/BlogContent'\nconst BlogPost = ({ location: { state: { props } }}) => (\n  <PageContent>\n    <BlogNav date={props.date} status={props.status} to=\"/post\" textread =\"Back to Blog\" />\n    <BlogContent {...props } />\n  </PageContent>\n)\nexport default BlogPost","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Blog from '../Blog'\nimport BlogPost from '../blog/BlogPost'\nconst Router = () => (\n  <Switch>\n    <Route exact path='/' component={Blog}/>\n    <Route exact path='/post' component={Blog}/>\n    <Route path='/post/:blogPost' component={BlogPost}/>\n  </Switch>\n)\nexport default Router","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport HeaderStyle from './layout/HeaderStyle'\nimport Content from './layout/Content'\nimport Header from './layout/Header';\nimport Footer from './layout/Footer'\nimport Router from './layout/Router'\n\nconst Layout = ({ children }) => (\n  <HeaderStyle>\n    <Helmet\n      title=\"Rasmivan Blog\"\n      meta={[\n        { name: 'description', content: 'Rasmivan Ilangovna\\'s personal wedsite, portfolio, blog, and just cool $tuff' },\n        { name: 'keywords', content: 'resume, blog, porfolio, tutorials, rasmi' },\n      ]}\n      script={[\n        { 'src': 'https://use.fontawesome.com/releases/v5.0.4/js/all.js'},\n      ]}\n      link={[\n        {'rel':'stylesheet', 'href': 'https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'}\n      ]}\n    />\n   <Header/>\n    <Content>\n    <Router />\n    </Content>\n    <Footer />\n  </HeaderStyle>\n)\n\nLayout.propTypes = {\n  children: PropTypes.func,\n}\n\nexport default Layout","import React from 'react';\nimport './App.css';\nimport Layout from './app/Layout';\n\nfunction App() {\n  return (\n    <Layout/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}